var gdjs;(function(s){s.PixiFiltersTools.registerFilterCreator("Twist",new class extends s.PixiFiltersTools.PixiFilterCreator{makePIXIFilter(r,t){const e=new PIXI.filters.TwistFilter;return e.offset=new PIXI.Point(0,0),e}updatePreRender(r,t){const e=r;e.offset.x=Math.round(e._offsetX*t.getWidth()),e.offset.y=Math.round(e._offsetY*t.getHeight())}updateDoubleParameter(r,t,e){const i=r;t==="radius"?i.radius=e:t==="angle"?i.angle=e:t==="padding"?i.padding=e:t==="offsetX"?i._offsetX=e:t==="offsetY"&&(i._offsetY=e)}getDoubleParameter(r,t){const e=r;return t==="radius"?e.radius:t==="angle"?e.angle:t==="padding"?e.padding:t==="offsetX"?e._offsetX:t==="offsetY"?e._offsetY:0}updateStringParameter(r,t,e){}updateColorParameter(r,t,e){}getColorParameter(r,t){return 0}updateBooleanParameter(r,t,e){}getNetworkSyncData(r){const t=r;return{r:t.radius,a:t.angle,p:t.padding,ox:t._offsetX,oy:t._offsetY}}updateFromNetworkSyncData(r,t){const e=r;e.radius=t.r,e.angle=t.a,e.padding=t.p,e._offsetX=t.ox,e._offsetY=t.oy}})})(gdjs||(gdjs={}));
//# sourceMappingURL=twist-pixi-filter.js.map
